# Reset Prefix
set -g prefix C-a

# large history
set-option -g history-limit 10000

## Don't use mouse
setw -g mouse on

# Toggle mouse on with ^B m
bind m \
         set -g mode-mouse on \;\
         set -g mouse-resize-pane on \;\
         set -g mouse-select-pane on \;\
         set -g mouse-select-window on \;\
         display 'Mouse: ON'

# Toggle mouse off with ^B M
         bind M \
             set -g mode-mouse off \;\
             set -g mouse-resize-pane off \;\
             set -g mouse-select-pane off \;\
             set -g mouse-select-window off \;\
             display 'Mouse: OFF'

# new window with naming
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"
bind-key C new-window \; command-prompt -p "Name for this new window: " "rename-window '%%'"

set-option -g automatic-rename off
set-option -g allow-rename off

#set-option -g set-titles on
#set-option -g set-titles-string 'new window'

bind-key p save-buffer ~/.tmux-buffer \; run-shell "xsel -i -b <~/.tmux-buffer && rm ~/.tmux-buffer"

# copy mode colors
setw -g mode-bg yellow
setw -g mode-fg black

# colors
set-option -g default-terminal "screen-256color" #"xterm-256color" # "screen-256color"

# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set -g visual-activity on
# setw -g window-status-current-attr reverse

# start window numbering at 1
set -g base-index 1

# copy contents of tmux copy buffer to x clipboard
# bind-key C-y run "tmux show-buffer | xclip -i -selection clipboard"
#
# Vi: copy mode {{{1
setw -g mode-keys vi
bind-key C-y send-keys y\; run-shell "tmux save-buffer - | xclip -i -selection clipboard"\; display-message "copied"

# vi movement keys
set-option -g status-keys vi

# Unbindings
unbind C-b # unbind default leader key

# Bindings

# reload tmux conf
bind-key r source-file ~/.tmux.conf

bind-key X confirm-before -p "kill-session? (y/n)" kill-session

# new split in current pane (horizontal / vertical)
bind-key - split-window -v # split pane horizontally
bind-key \ split-window -h # split pane vertically

# windows
set-window-option -g window-status-current-bg red

# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

# panes Navigatio
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key ` copy-mode

# status bar config
set -g status-bg 'colour235'
set -g message-command-fg 'colour252'
set -g status-justify 'centre'
set -g status-left-length '100'
set -g status 'on'
set -g pane-active-border-fg 'colour252'
set -g message-bg 'colour238'
set -g status-right-length '100'
set -g status-right-attr 'none'
set -g message-fg 'colour252'
set -g message-command-bg 'colour238'
set -g status-attr 'none'
set -g pane-border-fg 'colour238'
set -g status-left-attr 'none'
setw -g window-status-fg 'colour137'
setw -g window-status-attr 'none'
setw -g window-status-activity-bg 'colour235'
setw -g window-status-activity-attr 'none'
setw -g window-status-activity-fg 'colour252'
setw -g window-status-bg 'colour235'
set -g status-left '#[fg=colour232,bg=colour192] #S #[fg=colour192,bg=colour235,nobold,nounderscore,noitalics]▶ '
set -g status-right '#[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]◀#[fg=colour192,bg=colour238] %Y-%m-%d   %H:%M #[fg=colour192,bg=colour238,nobold,nounderscore,noitalics]◀#[fg=colour232,bg=colour192] #h #{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}'
setw -g window-status-format '#[fg=colour243,bg=colour235] (#I) #[fg=colour243,bg=colour235] #W '
setw -g window-status-current-format '#[fg=colour192,bg=colour238] (#I) #W '
